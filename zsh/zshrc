export TERM="xterm-256color"

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh
# Theme configuration
source ~/.dotfiles/zsh/configs/theme.zsh
# History configuration
source ~/.dotfiles/zsh/configs/history.zsh

# iterm2 shell integration
source ~/.iterm2_shell_integration.zsh

# =============================================================================
#                                  Plugins 
# =============================================================================
plugins=(git brew-cask colored-man extract osx autojump zsh-autosuggestions
colored-man-pages zsh-syntax-highlighting docker
history-substring-search safe-paste zsh-peco-history)

source $ZSH/oh-my-zsh.sh

# =============================================================================
#                                  Configs
# =============================================================================

COMPLETION_WAITING_DOTS="false" # Uncomment the following line to display red dots whilst waiting for completion.
	export EDITOR='vim' # Preferred editor for local and remote sessions


## ===================History=====================
setopt hist_ignore_all_dups inc_append_history
HISTFILE=~/.log/zsh_history
HISTSIZE=102400
SAVEHIST=102400
export ERL_AFLAGS="-kernel shell_history enabled"

## ===================Colors======================
autoload -U colors
colors
export LS_OPTIONS='--color=auto' # 如果没有指定，则自动选择颜色
export CLICOLOR='Yes' #是否输出颜色

## ===================Alias=======================
alias protoc_gen="protoc -I=. --cpp_out=."
alias cloc_noproto="cloc . --exclude-ext=pb.h,pb.cc"
alias docker_rmi_untag="docker rmi \$(docker images | awk '/^<none>/ { print \$3}')"
alias docker_rmi_all="docker rmi -f \$(docker images -q)"
alias docker_rm_all="docker rm -f \$(docker ps -a -f status=exited -q)"
alias lscolors="for code ({000..255}) print -P -- \"\$code: %F{\$code}This is how your text would look like%f\""
	alias git_status_subfolder="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '(echo {} && cd {} && git status -s && echo)' \;"
	#alias git_pull_subfolder="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '(echo {} && cd {} && git pull -s && echo)' \;"

## ================Keybindings====================
# keybinding for history-substring-search
	bindkey '^[[A' history-substring-search-up
	bindkey '^[[B' history-substring-search-down


## ==================Funtions=====================
function date_update()
{
	date_utc=$(curl -sD - google.com | grep '^Date:' | cut -d' ' -f3-6) 
    [ -n "$date_utc"   ] && sudo date -s "${date_utc}Z"
    echo $date_utc
}

function git_pull_subfolder()
{
	here=$PWD
	echo "**********************************************"
	for folder in ./*
	do
		echo "pulling from $folder"
		echo "**********************************************"
		cd "$here" && cd "$folder" && git pull origin
		echo "**********************************************"
	done
}

function google_response_time()
{
	if [ -z "$1" ];
	then
		printf "No proxy : "
		curl -s -w %{time_total}\\n -o /dev/null http://www.gstatic.com/generate_204
	else
		printf "Proxy 127.0.0.1:$1 : "
		curl --socks5-hostname 127.0.0.1:$1 -s -w %{time_total}\\n -o /dev/null http://www.gstatic.com/generate_204
	fi
}

## ============Local Configuration================
source ~/.zshrc.local
